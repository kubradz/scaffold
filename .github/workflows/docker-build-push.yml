name: CI & Docker Publish

on:
  push:
    branches:
      - main

jobs:
  # -----------------------------
  # 1) Compilation / tests / lint
  # -----------------------------
  ci:
    name: üîç CI Tests & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Yarn cache
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Compile Hardhat contracts
        run: yarn workspace hardhat compile

      - name: Run Hardhat tests
        run: yarn workspace hardhat test

      - name: Lint Hardhat
        run: yarn workspace hardhat lint --max-warnings=0

      - name: Build Next.js
        run: yarn workspace nextjs build

      - name: Lint Next.js
        run: yarn workspace nextjs lint --max-warnings=0

      - name: Type-check Next.js
        run: yarn workspace nextjs type-check

  # -----------------------------
  # 2) Build & push Docker image
  # -----------------------------
  docker:
    name: üê≥ Build & Push Docker Image
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (for production install)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Cache Yarn cache
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install production dependencies only
        run: yarn install --immutable --production

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/crypto-scaffold:latest
